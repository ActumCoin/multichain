language: cpp
cache:
  - ccache: true
  - yarn: true
deploy:
  provider: releases
  api_key:
    secure: E4XMebDbuGW2wQwZvu4nIoWuUn+8dJ8hh8n9wfAgoqSADBvz9/7EA4/v8+2PA0SkQt4oL/4DNVrqUiVj6ECYql3HNdmOZjbqIcnvOju5T5ToxBW011bYDWxk+Eaj1oznckZnBMpS2WD9TEYEJlWB0HMCAH88Z0n+LGrgh91EofbOWuOLpbz7HucS9s8iMhPk8Mvq1ar1V7XsokROLYpjjmDfbmY9GFrKF2ncC8JVUM/csdRdoeYQ+CdJDk6lH7V9Lf64g5XxOFYLHyb2hdiWkiZuJFzdMhO29l4NDrtGfFcXqsTgPdxSLr+QTb7u66/Novvd3qswLJkqIMNj5Od5CEJo0WeHvR+D5kzNREFdMIsKeGHXXncX0GY493M4f+lPVORvyakcJbLICzlzoDIm+NRMkHGljRRHEaLwaCJQf2nprS3vhBV0wIJpFFlRQaPjfu+WSQk4+ud0/54Qtdkh4ZRU/zqYZ0BHRPm8Y9QIDBYQb3TKfZrWW+ScEof021FzK2I2QdnmAny6tx1XD2ys+ATqnGG82D5PyK+npCMv+dQLrfKD+cTqokwl0U4sYxAdq6RCQSmhFhEzb2FfehsRhtGQdZMjGBAXl5pKAUsppGaDtx5Pn2pg9ggDVvm/BUSyJD1nqf4cNtPs/PI0q/C14BYtOV4q42LgoNYUg9/PNkI=
  file_glob: true
  file: "*.tar.gz"
  skip_cleanup: true
  on:
    tags: true
matrix:
  include:
  - os: linux
    sudo: required
    dist: trusty
    before_install:
    - sudo add-apt-repository ppa:bitcoin/bitcoin -y 
    - sudo apt-get update -qq
    - sudo apt-get install build-essential libtool autotools-dev automake pkg-config
      libssl-dev libevent-dev bsdmainutils libboost-all-dev software-properties-common
      libdb4.8-dev libdb4.8++-dev -qq
    - nvm install 9 && npm i -g yarn
    script:
    - "(./autogen.sh && ./configure  && make)"
    - ./rename-binaries.sh false
    - strip actumcrypto/actumcryptod
    - "(cd tests && yarn && npx mocha)"
    before_deploy: ./prepare-for-deploy.sh linux-x86_64 "$TRAVIS_TAG"
    env:
    - BUILD_FOR="Linux x86_64"
  - os: linux
    sudo: required
    dist: trusty
    before_install:
    - sudo add-apt-repository ppa:bitcoin/bitcoin -y
    - sudo apt-get update -qq
    - sudo apt-get install build-essential libtool autotools-dev automake pkg-config
      libssl-dev libevent-dev  libboost-all-dev software-properties-common
      libdb4.8-dev libdb4.8++-dev g++-arm-linux-gnueabihf curl g++-aarch64-linux-gnu
      g++-4.8-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu binutils-aarch64-linux-gnu
      g++-4.8-arm-linux-gnueabihf gcc-4.8-arm-linux-gnueabihf binutils-gold 
      binutils-arm-linux-gnueabihf g++-4.8-multilib gcc-4.8-multilib -qq
    script:
    - "./autogen.sh"
    - cd depends && make HOST=arm-linux-gnueabihf -j4 && cd ..
    - "./configure LDFLAGS=\"-static\" PKG_CONFIG=\"pkg-config --static\" --prefix=`pwd`/depends/arm-linux-gnueabihf --enable-cxx
      --disable-shared --enable-static --with-pic"
    - make
    - ./rename-binaries.sh false
    before_deploy: ./prepare-for-deploy.sh  linux-armhf "$TRAVIS_TAG"
    env:
    - BUILD_FOR="Linux armhf"
  - os: linux
    sudo: required
    dist: trusty
    before_install:
    - sudo add-apt-repository ppa:bitcoin/bitcoin -y
    - sudo apt-get update -qq
    - sudo apt-get install build-essential libtool autotools-dev automake pkg-config
      libssl-dev libevent-dev bsdmainutils g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64
      mingw-w64-x86-64-dev curl libboost-system-dev libboost-filesystem-dev libboost-chrono-dev
      libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb4.8-dev -qq
      libdb4.8++-dev
    script:
    - "./autogen.sh"
    - cd depends && make HOST=x86_64-w64-mingw32 -j4 && cd ..
    - "./configure --prefix=`pwd`/depends/x86_64-w64-mingw32 --enable-cxx --disable-shared
      --enable-static --with-pic"
    - make
    - ./rename-binaries.sh true 
    before_deploy: ./prepare-for-deploy.sh windows-x86_64 "$TRAVIS_TAG"
    env:
    - BUILD_FOR="Windows x86_64"
  - os: linux
    sudo: required
    dist: trusty
    before_install:
    - sudo add-apt-repository ppa:bitcoin/bitcoin -y
    - sudo apt-get update -qq
    - sudo apt-get install build-essential libtool autotools-dev automake pkg-config
      libssl-dev libevent-dev bsdmainutils g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64
      mingw-w64-x86-64-dev curl libboost-system-dev libboost-filesystem-dev libboost-chrono-dev
      libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb4.8-dev
      libdb4.8++-dev -qq
    script:
    - "./autogen.sh"
    - cd depends && make HOST=i686-w64-mingw32 -j4 && cd ..
    - "./configure --prefix=`pwd`/depends/i686-w64-mingw32 --enable-cxx --disable-shared
      --enable-static --with-pic"
    - make
    - ./rename-binaries.sh true
    before_deploy: ./prepare-for-deploy.sh windows-x86 "$TRAVIS_TAG"
    env:
    - BUILD_FOR="Windows x86"
  - os: osx
    before_install:
    - brew install autoconf automake berkeley-db4 libtool boost openssl pkg-config
      rename || true
    - export PATH="/usr/local/opt/ccache/libexec:$PATH"
    - rename -e 's/.dylib/.dylib.hidden/' /usr/local/opt/boost/lib/*.dylib
    - rename -e 's/.dylib/.dylib.hidden/' /usr/local/opt/berkeley-db@4/lib/*.dylib
    - rename -e 's/.dylib/.dylib.hidden/' /usr/local/opt/openssl/lib/*.dylib
    - EDITOR="./mac-openssl-fix.py" brew edit openssl
    - brew install openssl --force
    - nvm install 9 && npm i yarn -g
    script:
    - export LDFLAGS=-L/usr/local/opt/openssl/lib
    - export CPPFLAGS=-I/usr/local/opt/openssl/include
    - "./autogen.sh"
    - "./configure --with-gui=no --with-libs=no --with-miniupnpc=no"
    - make
    - ./rename-binaries false
    - cd tests && yarn && npx mocha && cd ..
    before_deploy: ./prepare-for-deploy.sh mac "$TRAVIS_TAG"
    env:
    - BUILD_FOR=Mac
notifications:
  webhooks: https://actumcrypto.org/travis-ci
